2021.05.12:
* new: src/printf: `/eval-backslash-esc` or `/e` flag to evaluate backslash escape sequences

2021.05.01:
* new: bin/contools: binaries update

2021.04.30:
* new: src/callf: stdin/stdout/stderr with builtin `tee` implementation (`/tee-*` flags)
* new: src/callf: stdin/stdout/stderr reopen from a file or special `CON`/`CONIN$`/`CONOUT$` input/output devices (`/reopen-*` flags)
* new: src/callf: stdin/stdout/stderr with builtin redirection into/from child process
* new: src/callf: stdin/stdout/stderr with builtin codepage change for console read/write (`/chcp-*` flags), unicode support with codepage `65001`
* new: src/callf: explicitly control stdin (must be console) echo mode (`/stdin-echo` option)
* new: src/callf: print as is without variables expansion or substitution (`/no-expand-env` and `/no-subst-vars` flags)
* new: src/callf: return arbitrary error codes (`/ret-*` flags)
* new: src/callf: other command line options and features (experimental)
* new: src/printf: stdout with builtin codepage change for console write (`/chcp` flag), unicode support with codepage `65001`
* new: src/printf: print as is without variables expansion or substitution (`/no-expand-env` and `/no-subst-vars` flags)
* new: src/printf: other command line options and features (experimental)
* changed: src/callf: converted to use TCHAR instead char (Unicode characters set)
* changed: src/printf: converted to use TCHAR instead char (Unicode characters set)
* changed: src/envvarcmp: converted to use TCHAR instead char (Unicode characters set)
* changed: Projects: callf, clearcache, envvars, envvarcmp, printargs, printf: projects switched to build under Unicode characters set
* changed: src: callf, clearcache, envvars, envvarcmp, pipetimes, printf, retakeowner, thlibautocfg: command line arguments parse reimplementation
* changed: src: merge common error codes between projects
* changed: todo update
* refactor: src: multiple projects formatting changes and code cleanup

2021.03.11:
* fixed: compatible_iterator.hpp: fixup under msvc, gcc, clang
* changed: readme update

2021.03.09:
* fixed: src/callf: parse of `{...}` placeholders in tail arguments
* new: src: `compatible_iterator` implementation, upgraded up to C++11 standard usage
* new: src/callf: code segments reuse with different inner containers through the usage of `compatible_iterator` instead of a direct usage of STL iterators
* changed: src: code cleanup

2021.03.03:
* new: todo file

2021.02.08:
* changed: Projects: moved to build for the Windows XP x86 SP2 or Windows XP x64 SP1
* changed: bin/contools: rebuild to run at least under Windows XP x86 SP2
* changed: bin/wshbazaar/wshdynacall: wshdynacall32.dll: rebuild to run at least under Windows XP x86 SP2

2021.02.04:
* new: bin: `conutils` from `ss64.net`

2021.01.07:
* new: bin/sysinternals: `movefiles.exe` and `pendmoves.exe` utilities

2020.12.02:
* new: src/wshbazaar/wshdynacall: `DllUnregisterServer` implementation

2020.12.02:
* fixed: x64 configuration build fixup
* new: x64 configuration
* new: Born's WSH dynacall 32-bit dll (http://www.borncity.com/web/WSHBazaar1/WSHDynaCall.htm ) port to msvc2015 to enable Win32 calls from vbs scripts

2020.10.25:
* new: ritchielawrence tee implementation (mtee)

2020.02.09:
* fixed: wxwidgets build fixup
* new: wxFileDialog: added support a directory selection
* changed: wxFileDialog: rebuilded versus wxwidgets 3.1.3

2019.05.07:
* new: changelog file
