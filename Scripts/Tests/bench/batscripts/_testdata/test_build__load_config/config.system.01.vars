#%% version: 1

# FORMAT:
#   [<attributes>] <variable>[:<class_name>]=<value>
#   [<attributes>] <variable>[:[<param0>][:[<param1>]]]=<value>
#
# <attributes>:           Variable space separated attributes: once | export | upath
# <variable>:             Variable name corresponding to the regex: [_a-zA-Z][_a-zA-Z0-9]*
# <class_name>:           Builtin class variant names: OSWIN | OSUNIX | BAT | SH
#   OSWIN:                Apply on Windows system including cygwin/mingw/msys subsystems.
#   OSUNIX:               Apply on Unix/Linux systems excluding cygwin/mingw/msys subsystems.
#   BAT:                  Apply on Windows system when this file has loaded from the Windows batch script loader.
#   SH:                   Apply on any system when this file has loaded from the Bash shell script loader.
#
# <param0>, <param1>:     Custom variable parameters.
#                         Example:
#                           <Param0>=OSWINXP
#                           <Param1>=OS32
#
#                           Loads besides the builtin variable classes, these:
#                           A:OSWINXP=...
#                           B:OSWINXP:OS32=...
#                           C::OS32=...
#
# <value>:                Value with substitution support: `%<variable>%`
#                         Can start by the `"` quote character, but two quotes does remove only when exist on both ends of a value.
#

export PROJECT_CACHE_ROOT                 ="%PROJECT_ROOT%/_cache"
export PROJECT_LOG_ROOT                   ="%PROJECT_ROOT%/.log"
export PROJECT_CONFIG_ROOT                ="%PROJECT_ROOT%/config"
export PROJECT_SCRIPTS_ROOT               ="%PROJECT_ROOT%/scripts"
export PROJECT_SCRIPTS_TOOLS_ROOT         ="%PROJECT_SCRIPTS_ROOT%/tools"
export PROJECT_LIBS_ROOT                  ="%PROJECT_ROOT%/libs"
export PROJECT_CMAKE_ROOT                 ="%PROJECT_ROOT%/cmake"

export PROJECT_OUTPUT_ROOT                ="%PROJECT_ROOT%/_out"
export PROJECT_OUTPUT_CONFIG_ROOT         ="%PROJECT_OUTPUT_ROOT%/config"
export PROJECT_OUTPUT_CMAKE_CACHE_ROOT    ="%PROJECT_OUTPUT_ROOT%/cmake"

export CONTOOLS_ROOT                      ="%PROJECT_LIBS_ROOT%/contools"

export TACKLELIB_CMAKE_CONFIG_ROOT        ="%PROJECT_CONFIG_ROOT%/cmake"
export TACKLELIB_CMAKE_OUTPUT_CONFIG_ROOT ="%PROJECT_OUTPUT_CONFIG_ROOT%/cmake"

export TACKLELIB_BASH_SCRIPTS_ROOT        ="%PROJECT_LIBS_ROOT%/bash/tacklelib"
export TACKLELIB_CMAKE_SCRIPTS_ROOT       ="%PROJECT_LIBS_ROOT%/cmake/tacklelib"
export TACKLELIB_PYTHON_SCRIPTS_ROOT      ="%PROJECT_LIBS_ROOT%/python/tacklelib"
export CMDOPLIB_PYTHON_SCRIPTS_ROOT       ="%PROJECT_LIBS_ROOT%/python/cmdoplib"

export PYXVCS_BASH_SCRIPTS_ROOT           ="%PROJECT_LIBS_ROOT%/bash/pyxvcs"
export PYXVCS_PYTHON_SCRIPTS_ROOT         ="%PROJECT_LIBS_ROOT%/python/pyxvcs"
export PYXVCS_BATCH_SCRIPTS_ROOT          ="%CONTOOLS_ROOT%/pyxvcs"

export PYXVCS_CONFIG_ROOT                 ="%PROJECT_CONFIG_ROOT%/pyxvcs"
export PYXVCS_OUTPUT_CONFIG_ROOT          ="%PROJECT_OUTPUT_CONFIG_ROOT%/pyxvcs"
export PYXVCS_PROJECTS_ROOT               ="%PROJECT_ROOT%/projects"
export PYXVCS_OUTPUT_PROJECTS_ROOT        ="%PROJECT_OUTPUT_ROOT%/projects"

export PYXVCS_PROJECT_TMPL_SCRIPTS_ROOT   ="%PROJECT_SCRIPTS_ROOT%/tmpl"

INIT_VERBOSE                              =0
TOOLS_VERBOSE                             =0
PRINT_VARS_SET                            =0
