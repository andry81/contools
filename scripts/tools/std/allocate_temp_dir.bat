@echo off & goto DOC_END

rem CAUTION:
rem   All paths here must be Windows canonical with backward slashes!
:DOC_END

setlocal

call "%%~dp0__init__.bat" || exit /b

rem script names call stack
if defined ?~ ( set "?~=%?~%-^>%~nx0" ) else if defined ?~nx0 ( set "?~=%?~nx0%-^>%~nx0" ) else set "?~=%~nx0"

set "TASK_NAME=%~1"
set "TEMP_DIR_NAME_TOKEN=%~2"
set "TEMP_PARENT_PATH=%~3"
set "TEMP_BASE_PATH=%~4"

rem default values
if not defined TASK_NAME set TASK_NAME=.
if not defined TEMP_PARENT_PATH set TEMP_PARENT_PATH=.
if not defined TEMP_BASE_PATH set "TEMP_BASE_PATH=%TEMP%"

set "TEMP_PARENT_PATH_DIR="
if defined TEMP_PARENT_PATH set "TEMP_PARENT_PATH_DIR=%TEMP_PARENT_PATH%\"

set "TEMP_PARENT_PATH=%TEMP_PARENT_PATH:/=\%"
set "TEMP_BASE_PATH=%TEMP_BASE_PATH:/=\%"

rem cast to integer
set /A SCRIPT_TEMP_NEST_LVL+=0

if %SCRIPT_TEMP_NEST_LVL% NEQ 0 if defined SCRIPT_TEMP_CURRENT_DIR if exist "\\?\%SCRIPT_TEMP_CURRENT_DIR%\*" goto ALLOC_NESTED_TEMP

set "SCRIPT_TEMP_CURRENT_TASK_NAME=%TASK_NAME%"

call "%%CONTOOLS_WMI_ROOT%%\get_wmi_local_datetime.vbs.bat"
set "SCRIPT_TEMP_ROOT_DATE=%RETURN_VALUE:~0,4%'%RETURN_VALUE:~4,2%'%RETURN_VALUE:~6,2%"
set "SCRIPT_TEMP_ROOT_TIME=%RETURN_VALUE:~8,2%'%RETURN_VALUE:~10,2%'%RETURN_VALUE:~12,2%''%RETURN_VALUE:~15,3%"

set "SCRIPT_TEMP_BASE_DIR_LIST=%TEMP_BASE_PATH%|%SCRIPT_TEMP_BASE_DIR_LIST%"

if not defined TEMP_DIR_NAME_TOKEN set TEMP_DIR_NAME_TOKEN=undefined

set "SCRIPT_TEMP_DIR_NAME=%SCRIPT_TEMP_ROOT_DATE%.%SCRIPT_TEMP_ROOT_TIME%.%TEMP_DIR_NAME_TOKEN%"
set "SCRIPT_TEMP_ROOT_DIR=%TEMP_BASE_PATH%\%TEMP_PARENT_PATH_DIR%%SCRIPT_TEMP_DIR_NAME%"

rem make absolute path
for /F "tokens=* delims="eol^= %%i in ("%SCRIPT_TEMP_ROOT_DIR%\.") do set "SCRIPT_TEMP_ROOT_DIR=%%~fi"

set "SCRIPT_TEMP_BASE_DIR=%SCRIPT_TEMP_ROOT_DIR%"
set "SCRIPT_TEMP_CURRENT_DIR=%SCRIPT_TEMP_BASE_DIR%"

set SCRIPT_TEMP_TASK_COUNT=0
set /A SCRIPT_TEMP_NEST_LVL+=1

set "SCRIPT_TEMP_TASK_COUNT_LIST=%SCRIPT_TEMP_TASK_COUNT%|%SCRIPT_TEMP_TASK_COUNT_LIST%"

goto ALLOC_NESTED_TEMP_END

:ALLOC_NESTED_TEMP
if "%SCRIPT_TEMP_CURRENT_TASK_NAME%" == "%TASK_NAME%" goto INCREMENT_TASK_COUNT

set "SCRIPT_TEMP_BASE_DIR=%SCRIPT_TEMP_CURRENT_DIR%"

:INCREMENT_TASK_COUNT
set "SCRIPT_TEMP_BASE_DIR_LIST=%SCRIPT_TEMP_BASE_DIR%|%SCRIPT_TEMP_BASE_DIR_LIST%"

set /A SCRIPT_TEMP_NEST_LVL+=1

set "SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX=%SCRIPT_TEMP_TASK_COUNT%"
if "%SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX:~1,1%" == "" set "SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX=0%SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX%"

set "SCRIPT_TEMP_CURRENT_DIR=%SCRIPT_TEMP_BASE_DIR%\%TEMP_PARENT_PATH_DIR%%SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX%.%TEMP_DIR_NAME_TOKEN%"

set "SCRIPT_TEMP_TASK_COUNT_LIST=%SCRIPT_TEMP_TASK_COUNT%|%SCRIPT_TEMP_TASK_COUNT_LIST%"
set /A SCRIPT_TEMP_TASK_COUNT+=1

:ALLOC_NESTED_TEMP_END
rem echo --%SCRIPT_TEMP_BASE_DIR%--%TEMP_PARENT_PATH_DIR%%TEMP_DIR_NAME_TOKEN%.%SCRIPT_TEMP_TASK_COUNT_FILE_SUFFIX%--

set "SCRIPT_TEMP_PREV_DIR_LIST=%SCRIPT_TEMP_CURRENT_DIR_LIST%"

set "SCRIPT_TEMP_CURRENT_TASK_NAME_LIST=%SCRIPT_TEMP_CURRENT_TASK_NAME%|%SCRIPT_TEMP_CURRENT_TASK_NAME_LIST%"
set "SCRIPT_TEMP_CURRENT_DIR_LIST=%SCRIPT_TEMP_CURRENT_DIR%|%SCRIPT_TEMP_CURRENT_DIR_LIST%"
set "SCRIPT_TEMP_PARENT_PATH_DIR_LIST=%TEMP_PARENT_PATH_DIR%|%SCRIPT_TEMP_PARENT_PATH_DIR_LIST%"
set "SCRIPT_TEMP_DIR_NAME_TOKEN_LIST=%TEMP_DIR_NAME_TOKEN%|%SCRIPT_TEMP_DIR_NAME_TOKEN_LIST%"

set LAST_ERROR=0
mkdir "%SCRIPT_TEMP_CURRENT_DIR%" 2>nul && goto EXIT
set LAST_ERROR=%ERRORLEVEL%

if %SCRIPT_TEMP_NEST_LVL% EQU 0 goto SKIP_REALLOCATE

rem CAUTION:
rem   In case of nested call, the last directory may be locked from the remove in the previous `free_temp_dir.bat` call.
rem   We must randomize the directory name and try to allocate again!
rem
(
  echo;%?~%: warning: could not allocate nested temporary directory: "%SCRIPT_TEMP_CURRENT_DIR%", attempting to reallocate...
  echo;
  rmdir /S /Q "%SCRIPT_TEMP_CURRENT_DIR%" 2>nul
  (
    set LAST_ERROR=0
    mkdir "%SCRIPT_TEMP_CURRENT_DIR%" 2>nul && goto EXIT
  ) || (
    echo;%?~%: error: could not reallocate temporary directory: "%SCRIPT_TEMP_CURRENT_DIR%", attempting to allocate unique directory...
    echo;
  )
) >&2

set "SCRIPT_TEMP_CURRENT_DIR=%SCRIPT_TEMP_CURRENT_DIR%.%RANDOM%-%RANDOM%"
set "SCRIPT_TEMP_CURRENT_DIR_LIST=%SCRIPT_TEMP_CURRENT_DIR%|%SCRIPT_TEMP_PREV_DIR_LIST%"

mkdir "%SCRIPT_TEMP_CURRENT_DIR%" 2>nul && goto EXIT
set LAST_ERROR=%ERRORLEVEL%

:SKIP_REALLOCATE
(
  echo;%?~%: error: could not allocate temporary directory: "%SCRIPT_TEMP_CURRENT_DIR%".
  echo;
) >&2

:EXIT
rem return values
(
  endlocal
  set "SCRIPT_TEMP_CURRENT_TASK_NAME=%SCRIPT_TEMP_CURRENT_TASK_NAME%"
  set "SCRIPT_TEMP_NEST_LVL=%SCRIPT_TEMP_NEST_LVL%"
  set "SCRIPT_TEMP_ROOT_DATE=%SCRIPT_TEMP_ROOT_DATE%"
  set "SCRIPT_TEMP_ROOT_TIME=%SCRIPT_TEMP_ROOT_TIME%"
  set "SCRIPT_TEMP_ROOT_DIR=%SCRIPT_TEMP_ROOT_DIR%"
  set "SCRIPT_TEMP_DIR_NAME=%SCRIPT_TEMP_DIR_NAME%"
  set "SCRIPT_TEMP_BASE_DIR=%SCRIPT_TEMP_BASE_DIR%"
  set "SCRIPT_TEMP_CURRENT_DIR=%SCRIPT_TEMP_CURRENT_DIR%"
  set "SCRIPT_TEMP_TASK_COUNT=%SCRIPT_TEMP_TASK_COUNT%"

  set "SCRIPT_TEMP_CURRENT_TASK_NAME_LIST=%SCRIPT_TEMP_CURRENT_TASK_NAME_LIST%"
  set "SCRIPT_TEMP_CURRENT_DIR_LIST=%SCRIPT_TEMP_CURRENT_DIR_LIST%"
  set "SCRIPT_TEMP_BASE_DIR_LIST=%SCRIPT_TEMP_BASE_DIR_LIST%"
  set "SCRIPT_TEMP_PARENT_PATH_DIR_LIST=%SCRIPT_TEMP_PARENT_PATH_DIR_LIST%"
  set "SCRIPT_TEMP_DIR_NAME_TOKEN_LIST=%SCRIPT_TEMP_DIR_NAME_TOKEN_LIST%"
  set "SCRIPT_TEMP_TASK_COUNT_LIST=%SCRIPT_TEMP_TASK_COUNT_LIST%"

  if %LAST_ERROR% NEQ 0 (
    rem just in case
    if exist "\\?\%SCRIPT_TEMP_CURRENT_DIR%\*" rmdir /S /Q "%SCRIPT_TEMP_CURRENT_DIR%" || (
      echo;%?~%: error: could not free temporary directory: "%SCRIPT_TEMP_CURRENT_DIR%".
      echo;
      exit /b 255
    ) >&2
  )
)

exit /b 0
